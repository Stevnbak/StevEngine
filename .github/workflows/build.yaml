name: Build and release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations.
      fail-fast: false

      # Set up a matrix to run the following configurations:
      # 1. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      # 2. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      matrix:
        os: [ubuntu-latest] # add "windows-latest" to build on windows
        build_type: [Release]
        c_compiler: [clang, cl]
        include:
          #- os: windows-latest
          #  c_compiler: cl
          #  cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          #- os: windows-latest
          #  c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    #- name: Install SDL2 libraries
    #  run: >
    #    sudo apt-get install libsdl2-dev libsdl2-mixer-dev libsdl2-image-dev
    - name: Build SDL2 libraries
      uses: libsdl-org/setup-sdl@main
      id: sdl
      with:
        install-linux-dependencies: false
        version: 2-latest
        version-sdl-image: 2-latest
        version-sdl-mixer: 2-head
        cmake-arguments: "-DBUILD_SHARED_LIBS=OFF -DSDL2MIXER_VENDORED=ON -DSDL2MIXER_OPUS=OFF -DSDL2MIXER_MOD=OFF -DSDL2MIXER_MIDI=OFF"
        build-type: "Debug"
        pre-release: "false"
    - name: Configure CMake
      run: >
        cmake -B ${{ github.workspace }}/build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }} -Wno-dev
    - name: Build project
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}
