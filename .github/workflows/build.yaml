name: Build and release

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  #  tags:
  #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations.
      fail-fast: false

      # Set up a matrix to run the following configurations:
      # 1. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      # 2. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      matrix:
        os: [ubuntu] # add "windows" to build on windows
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          #- os: windows
          #  c_compiler: cl
          #  cpp_compiler: cl
          - os: ubuntu
            c_compiler: gcc
            cpp_compiler: g++-13
        exclude:
          #- os: windows
          #  c_compiler: gcc
          - os: ubuntu
            c_compiler: cl

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Install G++ 13
      run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt install -y g++-13
    - name: Cache CMake
      uses: actions/cache@v4
      with:
        path: build
        key: ${{ runner.os }}.${{ hashFiles('libs') }}
    - name: Configure CMake
      run: >
        cmake -B ${{ github.workspace }}/build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }} -Wno-dev
    - name: Build project
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}
    - name: Deploy to output branch
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: output
        FOLDER: ./build/out
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}